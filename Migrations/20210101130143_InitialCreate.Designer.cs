// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RLTestTask.Models;

namespace RLTestTask.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210101130143_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("RLTestTask.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "editor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "customer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "contractor"
                        });
                });

            modelBuilder.Entity("RLTestTask.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.admin",
                            Login = "admin",
                            Name = "Admin",
                            Password = "AQAAAAEAACcQAAAAEIt7p7qbN5ttCsyeJPXmUjzL3J15j0RULq2LcrS6+z4pvJbsrK40lgTHKHy6j4qbUg=="
                        },
                        new
                        {
                            Id = 2,
                            Email = "editor@editor.editor",
                            Login = "editor",
                            Name = "Editor",
                            Password = "AQAAAAEAACcQAAAAEJVz5UWZVEtNo/ziv/8HC6LRSImn+fKhYlyQI1Jw0B7QUkzJZ2z3wSDPzNYDZAV/+Q=="
                        },
                        new
                        {
                            Id = 3,
                            Email = "custome@contractor.customer",
                            Login = "customerContractor",
                            Name = "CustomerContractor",
                            Password = "AQAAAAEAACcQAAAAEPSS922K9IgQ2WoXWMqCi8OrT9xhvLhjvRvdczDdpTmLNPNAY+Nnx28m9olEbjjcrw=="
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");

                    b.HasData(
                        new
                        {
                            RolesId = 1,
                            UsersId = 1
                        },
                        new
                        {
                            RolesId = 2,
                            UsersId = 2
                        },
                        new
                        {
                            RolesId = 3,
                            UsersId = 3
                        },
                        new
                        {
                            RolesId = 4,
                            UsersId = 3
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("RLTestTask.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RLTestTask.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
